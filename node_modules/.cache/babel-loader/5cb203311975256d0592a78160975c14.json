{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\xXXx\\\\Desktop\\\\apps\\\\hooks\\\\react-hooks\\\\src\\\\pages\\\\Profile.js\";\nimport React, { useContext, useEffect, Fragment } from 'react';\nimport { GithubContext } from '../context/github/githubContext';\nimport { Link } from 'react-router-dom';\nimport { Repos } from '../components/Repos';\nexport const Profile = ({\n  match\n}) => {\n  const _useContext = useContext(GithubContext),\n        getUser = _useContext.getUser,\n        getRepos = _useContext.getRepos,\n        loading = _useContext.loading,\n        user = _useContext.user,\n        repos = _useContext.repos;\n\n  const urlName = match.params.name;\n  useEffect(() => {\n    getUser(urlName);\n    getRepos(urlName); // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n  }\n\n  const name = user.name,\n        company = user.company,\n        avatar_url = user.avatar_url,\n        location = user.location,\n        bio = user.bio,\n        blog = user.blog,\n        login = user.login,\n        html_url = user.html_url,\n        followers = user.followers,\n        following = user.following,\n        public_repos = user.public_repos,\n        public_gists = user.public_gists;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\u041D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"), React.createElement(\"div\", {\n    className: \"card mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-3 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: avatar_url,\n    alt: name,\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, name), location && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\\u041C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435: \", location)), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, bio && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"BIO\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, bio)), React.createElement(\"a\", {\n    href: html_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, login && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Username: \"), \" \", login), company && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F: \"), \" \", company), blog && React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Website: \"), \" \", blog)), React.createElement(\"div\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0447\\u0438\\u043A\\u0438: \", followers), React.createElement(\"div\", {\n    className: \"badge badge-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u043D: \", following), React.createElement(\"div\", {\n    className: \"badge badge-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\u0420\\u0435\\u043F\\u043E\\u0437\\u0438\\u0442\\u043E\\u0440\\u0438\\u0438: \", public_repos), React.createElement(\"div\", {\n    className: \"badge badge-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Gists: \", public_gists))))), React.createElement(Repos, {\n    repos: repos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["c:\\Users\\xXXx\\Desktop\\apps\\hooks\\react-hooks\\src\\pages\\Profile.js"],"names":["React","useContext","useEffect","Fragment","GithubContext","Link","Repos","Profile","match","getUser","getRepos","loading","user","repos","urlName","params","name","company","avatar_url","location","bio","blog","login","html_url","followers","following","public_repos","public_gists","width"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, Fragment} from 'react'\nimport {GithubContext} from '../context/github/githubContext'\nimport {Link} from 'react-router-dom'\nimport {Repos} from '../components/Repos'\n\nexport const Profile = ({match}) => {\n  const {getUser, getRepos, loading, user, repos} = useContext(GithubContext)\n  const urlName = match.params.name\n\n  useEffect(() => {\n    getUser(urlName)\n    getRepos(urlName)\n    // eslint-disable-next-line\n  }, [])\n\n  if (loading) {\n    return <p className=\"text-center\">Загрузка...</p>\n  }\n\n  const {\n    name, company, avatar_url,\n    location, bio, blog,\n    login, html_url, followers,\n    following, public_repos,\n    public_gists\n  } = user\n\n  return (\n    <Fragment>\n      <Link to=\"/\" className=\"btn btn-link\">На главную</Link>\n\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-sm-3 text-center\">\n              <img\n                src={avatar_url}\n                alt={name}\n                style={{width: '150px'}}\n              />\n              <h1>{name}</h1>\n              {location && <p>Местоположение: {location}</p>}\n            </div>\n            <div className=\"col\">\n              {\n                bio && <Fragment>\n                  <h3>BIO</h3>\n                  <p>{bio}</p>\n                </Fragment>\n              }\n              <a\n                href={html_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"btn btn-dark\"\n              >Открыть профиль</a>\n              <ul>\n                {login && <li>\n                  <strong>Username: </strong> {login}\n                </li>}\n\n                {company && <li>\n                  <strong>Компания: </strong> {company}\n                </li>}\n\n                {blog && <li>\n                  <strong>Website: </strong> {blog}\n                </li>}\n              </ul>\n\n              <div className=\"badge badge-primary\">Подписчики: {followers}</div>\n              <div className=\"badge badge-success\">Подписан: {following}</div>\n              <div className=\"badge badge-info\">Репозитории: {public_repos}</div>\n              <div className=\"badge badge-dark\">Gists: {public_gists}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Repos repos={repos} />\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}