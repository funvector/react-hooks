{"ast":null,"code":"import _slicedToArray from \"c:\\\\Users\\\\xXXx\\\\Desktop\\\\apps\\\\hooks\\\\react-hooks\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"c:\\\\Users\\\\xXXx\\\\Desktop\\\\apps\\\\hooks\\\\react-hooks\\\\src\\\\context\\\\github\\\\GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { GithubContext } from './githubContext';\nimport { githubReducer } from './githubReducer';\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../types';\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n\nconst withCreds = url => {\n  return \"\".concat(url, \"client_id=\").concat(CLIENT_ID, \"&client_secret=\").concat(CLIENT_SECRET);\n};\n\nexport const GithubState = ({\n  children\n}) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  };\n\n  const _useReducer = useReducer(githubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const search = async value => {\n    setLoading();\n    const response = await axios.get(withCreds(\"https://api.github.com/search/users?q=\".concat(value, \"&\")));\n    dispatch({\n      type: SEARCH_USERS,\n      payload: response.data.items\n    });\n  };\n\n  const getUser = async name => {\n    setLoading();\n    const response = await axios.get(withCreds(\"https://api.github.com/users/\".concat(name, \"?\")));\n    dispatch({\n      type: GET_USER,\n      payload: response.data\n    });\n  };\n\n  const getRepos = async name => {\n    setLoading();\n    const response = await axios.get(withCreds(\"https://api.github.com/users/\".concat(name, \"/repos?per_page=5&\")));\n    dispatch({\n      type: GET_REPOS,\n      payload: response.data\n    });\n  };\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  });\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  const user = state.user,\n        users = state.users,\n        repos = state.repos,\n        loading = state.loading;\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      setLoading,\n      search,\n      getUser,\n      getRepos,\n      clearUsers,\n      user,\n      users,\n      repos,\n      loading\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["c:\\Users\\xXXx\\Desktop\\apps\\hooks\\react-hooks\\src\\context\\github\\GithubState.js"],"names":["React","useReducer","axios","GithubContext","githubReducer","CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","CLIENT_ID","process","env","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","withCreds","url","GithubState","children","initialState","user","users","loading","repos","state","dispatch","search","value","setLoading","response","get","type","payload","data","items","getUser","name","getRepos","clearUsers"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react'\nimport axios from 'axios'\nimport {GithubContext} from './githubContext'\nimport {githubReducer} from './githubReducer'\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from '../types'\n\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\n\nconst withCreds = url => {\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\n}\n\n\nexport const GithubState = ({children}) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  }\n\n  const [state, dispatch] = useReducer(githubReducer, initialState)\n\n  const search = async value => {\n    setLoading()\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\n    )\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: response.data.items\n    })\n  }\n\n  const getUser = async name => {\n    setLoading()\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}?`)\n    )\n\n    dispatch({\n      type: GET_USER,\n      payload: response.data\n    })\n  }\n\n  const getRepos = async name => {\n    setLoading()\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\n    )\n\n    dispatch({\n      type: GET_REPOS,\n      payload: response.data\n    })\n  }\n\n  const clearUsers = () => dispatch({type: CLEAR_USERS})\n\n  const setLoading = () => dispatch({type: SET_LOADING})\n\n  const {user, users, repos, loading} = state\n\n  return (\n    <GithubContext.Provider value={{\n      setLoading, search, getUser, getRepos, clearUsers,\n      user, users, repos, loading\n    }}>\n      {children}\n    </GithubContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}